<?php

/**
 * Copyright (c) 2023-2024, Felix Jahn
 *
 * For the full copyright and license information, please view
 * the LICENSE file that was distributed with this source code.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 *
 * @see https://github.com/oruborus/harness262
 */

declare(strict_types=1);

use Oru\Harness\Assertion\GenericAssertionFactory;
use Oru\Harness\Box\TestCaseFromStdinBox;
use Oru\Harness\EngineFactory\GenericEngineFactory;
use Oru\Harness\Helpers\SerializableTransformer;
use Oru\Harness\Printer\SilentPrinter;
use Oru\Harness\Subprocess\SingleTestSubprocess;
use Oru\Harness\TestResult\GenericTestResultFactory;
use Oru\Harness\TestRunner\LinearTestRunner;

const CONFIG_PATH = '{{CONFIG_PATH}}';

require './vendor/autoload.php';

$engineFactory = new GenericEngineFactory(CONFIG_PATH);

try {
    $result = (new SingleTestSubprocess(
        new LinearTestRunner(
            $engineFactory,
            new GenericAssertionFactory($engineFactory),
            new SilentPrinter(),
            new GenericTestResultFactory(),
        ),
        (new TestCaseFromStdinBox())->unbox(),
    ))->run();
} catch (Throwable $throwable) {
    $result = $throwable;
}

$transformer = new SerializableTransformer();
$result = $transformer->transform($result);

ini_set('zend.exception_ignore_args', 1);
echo serialize($result);
ini_set('zend.exception_ignore_args', 0);
